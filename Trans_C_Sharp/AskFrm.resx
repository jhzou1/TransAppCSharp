<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>